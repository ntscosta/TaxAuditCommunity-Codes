// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxAuditCommunity.Data;

namespace TaxAuditCommunity.Data.Migrations
{
    [DbContext(typeof(NFeDbContext))]
    [Migration("20181205200913_ProsoftEmpresas")]
    partial class ProsoftEmpresas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.AutXML.autXML", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14);

                    b.Property<string>("CPF")
                        .HasMaxLength(11);

                    b.Property<string>("infNFeId");

                    b.HasKey("Id");

                    b.HasIndex("CNPJ");

                    b.HasIndex("CPF");

                    b.HasIndex("infNFeId");

                    b.ToTable("autXML");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Avulsa.avulsa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14);

                    b.Property<int>("UF");

                    b.Property<DateTime>("dEmi");

                    b.Property<DateTime>("dPag");

                    b.Property<string>("fone")
                        .HasMaxLength(14);

                    b.Property<string>("infNFeId");

                    b.Property<string>("matr")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int>("nDAR")
                        .HasMaxLength(60);

                    b.Property<string>("repEmit")
                        .HasMaxLength(60);

                    b.Property<double>("vDAR");

                    b.Property<string>("xAgente")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("xOrgao")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("CNPJ");

                    b.HasIndex("infNFeId")
                        .IsUnique()
                        .HasFilter("[infNFeId] IS NOT NULL");

                    b.HasIndex("xAgente");

                    b.HasIndex("xOrgao");

                    b.ToTable("avulsa");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Cana.cana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("_ref")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("infNFeId");

                    b.Property<double>("qTotAnt");

                    b.Property<double>("qTotGer");

                    b.Property<double>("qTotMes");

                    b.Property<string>("safra")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<double>("vFor");

                    b.Property<double>("vLiqFor");

                    b.Property<double>("vTotDed");

                    b.HasKey("Id");

                    b.HasIndex("infNFeId")
                        .IsUnique()
                        .HasFilter("[infNFeId] IS NOT NULL");

                    b.ToTable("cana");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Cana.deduc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("canaId");

                    b.Property<double>("vDed");

                    b.Property<string>("xDed");

                    b.HasKey("Id");

                    b.HasIndex("canaId");

                    b.ToTable("deduc");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Cana.forDia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("canaId");

                    b.Property<int>("dia");

                    b.Property<double>("qtde");

                    b.HasKey("Id");

                    b.HasIndex("canaId");

                    b.ToTable("forDia");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Cobr.cobr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("infNFeId");

                    b.HasKey("Id");

                    b.HasIndex("infNFeId")
                        .IsUnique()
                        .HasFilter("[infNFeId] IS NOT NULL");

                    b.ToTable("cobr");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Cobr.dup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cobrId");

                    b.Property<DateTime>("dVenc");

                    b.Property<string>("nDup")
                        .HasMaxLength(60);

                    b.Property<double>("vDup");

                    b.HasKey("Id");

                    b.HasIndex("cobrId");

                    b.ToTable("dup");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Cobr.fat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cobrId");

                    b.Property<string>("nFat")
                        .HasMaxLength(60);

                    b.Property<double>("vDesc");

                    b.Property<double>("vLiq");

                    b.Property<double>("vOrig");

                    b.HasKey("Id");

                    b.HasIndex("cobrId")
                        .IsUnique();

                    b.ToTable("fat");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Compra.compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("infNFeId");

                    b.Property<string>("xCont")
                        .HasMaxLength(60);

                    b.Property<string>("xNEmp")
                        .HasMaxLength(22);

                    b.Property<string>("xPed")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("infNFeId")
                        .IsUnique()
                        .HasFilter("[infNFeId] IS NOT NULL");

                    b.ToTable("compra");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Dest.dest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14);

                    b.Property<string>("CPF")
                        .HasMaxLength(11);

                    b.Property<string>("IE")
                        .HasMaxLength(14);

                    b.Property<string>("IM")
                        .HasMaxLength(15);

                    b.Property<string>("ISUF")
                        .HasMaxLength(9);

                    b.Property<string>("email")
                        .HasMaxLength(60);

                    b.Property<string>("idEstrangeiro")
                        .HasMaxLength(20);

                    b.Property<int>("indIEDest");

                    b.Property<string>("infNFeId");

                    b.Property<string>("xNome")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("CNPJ");

                    b.HasIndex("CPF");

                    b.HasIndex("infNFeId")
                        .IsUnique()
                        .HasFilter("[infNFeId] IS NOT NULL");

                    b.HasIndex("xNome");

                    b.ToTable("dest");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Dest.enderDest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CEP")
                        .HasMaxLength(60);

                    b.Property<int>("UF");

                    b.Property<int>("cMun")
                        .HasMaxLength(7);

                    b.Property<int>("cPais")
                        .HasMaxLength(60);

                    b.Property<int>("destId");

                    b.Property<int>("emitId");

                    b.Property<string>("fone")
                        .HasMaxLength(60);

                    b.Property<string>("nro")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("xBairro")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("xCpl")
                        .HasMaxLength(60);

                    b.Property<string>("xLgr")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("xMun")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("xPais")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("UF");

                    b.HasIndex("cMun");

                    b.HasIndex("destId")
                        .IsUnique();

                    b.HasIndex("nro");

                    b.HasIndex("xBairro");

                    b.HasIndex("xLgr");

                    b.HasIndex("xMun");

                    b.ToTable("enderDest");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("impostoId");

                    b.HasKey("Id");

                    b.HasIndex("impostoId")
                        .IsUnique();

                    b.ToTable("COFINS");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINSAliq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("COFINSId");

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<double>("pCOFINS");

                    b.Property<double>("vBC");

                    b.Property<double>("vCOFINS");

                    b.HasKey("Id");

                    b.HasIndex("COFINSId")
                        .IsUnique();

                    b.ToTable("COFINSAliq");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINSNT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("COFINSId");

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<double>("pCOFINS");

                    b.Property<double>("qBCProd");

                    b.Property<double>("vAliqProd");

                    b.Property<double>("vBC");

                    b.Property<double>("vCOFINS");

                    b.HasKey("Id");

                    b.HasIndex("COFINSId")
                        .IsUnique();

                    b.ToTable("COFINSNT");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINSOutr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("COFINSId");

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<double>("pCOFINS");

                    b.Property<double>("qBCProd");

                    b.Property<double>("vAliqProd");

                    b.Property<double>("vBC");

                    b.Property<double>("vCOFINS");

                    b.HasKey("Id");

                    b.HasIndex("COFINSId")
                        .IsUnique();

                    b.ToTable("COFINSOutr");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINSQtde", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("COFINSId");

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<double>("qBCProd");

                    b.Property<double>("vAliqProd");

                    b.Property<double>("vCOFINS");

                    b.HasKey("Id");

                    b.HasIndex("COFINSId")
                        .IsUnique();

                    b.ToTable("COFINSQtde");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofinsst.COFINSST", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("impostoId");

                    b.Property<double>("pCOFINS");

                    b.Property<double>("qBCProd");

                    b.Property<double>("vAliqProd");

                    b.Property<double>("vBC");

                    b.Property<double>("vCOFINS");

                    b.HasKey("Id");

                    b.HasIndex("impostoId")
                        .IsUnique();

                    b.ToTable("COFINSST");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("impostoId");

                    b.HasKey("Id");

                    b.HasIndex("impostoId")
                        .IsUnique();

                    b.ToTable("ICMS");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS00", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("modBC");

                    b.Property<byte>("orig");

                    b.Property<double>("pFCP");

                    b.Property<double>("pICMS");

                    b.Property<double>("vBC");

                    b.Property<double>("vFCP");

                    b.Property<double>("vICMS");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMS00");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS10", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("modBC");

                    b.Property<byte>("modBCST");

                    b.Property<byte>("orig");

                    b.Property<double>("pFCP");

                    b.Property<double>("pFCPST");

                    b.Property<double>("pICMS");

                    b.Property<double>("pICMSST");

                    b.Property<double>("pMVAST");

                    b.Property<double>("pRedBCST");

                    b.Property<double>("vBC");

                    b.Property<double>("vBCFCP");

                    b.Property<double>("vBCFCPST");

                    b.Property<double>("vBCST");

                    b.Property<double>("vFCP");

                    b.Property<double>("vFCPST");

                    b.Property<double>("vICMS");

                    b.Property<double>("vICMSST");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMS10");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS20", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("modBC");

                    b.Property<byte>("motDesICMS");

                    b.Property<byte>("orig");

                    b.Property<double>("pFCP");

                    b.Property<double>("pICMS");

                    b.Property<double>("pRedBC");

                    b.Property<double>("vBC");

                    b.Property<double>("vBCFCP");

                    b.Property<double>("vFCP");

                    b.Property<double>("vICMS");

                    b.Property<double>("vICMSDeson");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMS20");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS30", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("modBCST");

                    b.Property<byte>("motDesICMS");

                    b.Property<byte>("orig");

                    b.Property<double>("pFCPST");

                    b.Property<double>("pICMSST");

                    b.Property<double>("pMVAST");

                    b.Property<double>("pRedBCST");

                    b.Property<double>("vBCFCPST");

                    b.Property<double>("vBCST");

                    b.Property<double>("vFCPST");

                    b.Property<double>("vICMSDeson");

                    b.Property<double>("vICMSST");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMS30");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS40", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("motDesICMS");

                    b.Property<byte>("orig");

                    b.Property<double>("vICMSDeson");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMS40");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS51", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("modBC");

                    b.Property<byte>("orig");

                    b.Property<double>("pDif");

                    b.Property<double>("pFCP");

                    b.Property<double>("pICMS");

                    b.Property<double>("pICMSDif");

                    b.Property<double>("pRedBC");

                    b.Property<double>("vBC");

                    b.Property<double>("vBCFCP");

                    b.Property<double>("vFCP");

                    b.Property<double>("vICMS");

                    b.Property<double>("vICMSDif");

                    b.Property<double>("vICMSOp");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMS51");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS60", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("orig");

                    b.Property<double>("pFCPSTRet");

                    b.Property<double>("pICMSEfet");

                    b.Property<double>("pRedBCEfet");

                    b.Property<double>("pST");

                    b.Property<double>("vBCEfet");

                    b.Property<double>("vBCSFCPSTRet");

                    b.Property<double>("vBCSTRet");

                    b.Property<double>("vFCPSTRet");

                    b.Property<double>("vICMSEfet");

                    b.Property<double>("vICMSSTRet");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMS60");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS70", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("modBC");

                    b.Property<byte>("modBCST");

                    b.Property<byte>("motDesICMS");

                    b.Property<byte>("orig");

                    b.Property<double>("pFCP");

                    b.Property<double>("pFCPST");

                    b.Property<double>("pICMS");

                    b.Property<double>("pICMSST");

                    b.Property<double>("pMVAST");

                    b.Property<double>("pRedBC");

                    b.Property<double>("pRedBCST");

                    b.Property<double>("vBC");

                    b.Property<double>("vBCFCP");

                    b.Property<double>("vBCFCPST");

                    b.Property<double>("vBCST");

                    b.Property<double>("vFCP");

                    b.Property<double>("vFCPST");

                    b.Property<double>("vICMS");

                    b.Property<double>("vICMSDeson");

                    b.Property<double>("vICMSST");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMS70");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS90", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("modBC");

                    b.Property<byte>("modBCST");

                    b.Property<byte>("motDesICMS");

                    b.Property<byte>("orig");

                    b.Property<double>("pFCP");

                    b.Property<double>("pFCPST");

                    b.Property<double>("pICMS");

                    b.Property<double>("pICMSST");

                    b.Property<double>("pMVAST");

                    b.Property<double>("pRedBC");

                    b.Property<double>("pRedBCST");

                    b.Property<double>("vBC");

                    b.Property<double>("vBCFCP");

                    b.Property<double>("vBCFCPST");

                    b.Property<double>("vBCST");

                    b.Property<double>("vFCP");

                    b.Property<double>("vFCPST");

                    b.Property<double>("vICMS");

                    b.Property<double>("vICMSDeson");

                    b.Property<double>("vICMSST");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMS90");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("ICMSId");

                    b.Property<string>("UFST")
                        .IsRequired();

                    b.Property<byte>("modBC");

                    b.Property<byte>("modBCST");

                    b.Property<byte>("orig");

                    b.Property<double>("pBCOp");

                    b.Property<double>("pICMS");

                    b.Property<double>("pICMSST");

                    b.Property<double>("pMVAST");

                    b.Property<double>("pRedBC");

                    b.Property<double>("pRedBCST");

                    b.Property<double>("vBC");

                    b.Property<double>("vBCST");

                    b.Property<double>("vICMS");

                    b.Property<double>("vICMSST");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMSPart");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN101", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CSOSN")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("orig");

                    b.Property<double>("pCredSN");

                    b.Property<double>("vCredICMSSN");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMSSN101");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN102", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CSOSN")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("orig");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMSSN102");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN201", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CSOSN")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("modBCST");

                    b.Property<byte>("orig");

                    b.Property<double>("pCredSN");

                    b.Property<double>("pFCPST");

                    b.Property<double>("pICMSST");

                    b.Property<double>("pMVAST");

                    b.Property<double>("pRedBCST");

                    b.Property<double>("vBCFCPST");

                    b.Property<double>("vBCST");

                    b.Property<double>("vCredICMSSN");

                    b.Property<double>("vFCPST");

                    b.Property<double>("vICMSST");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMSSN201");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN202", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CSOSN")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("modBCST");

                    b.Property<byte>("orig");

                    b.Property<double>("pFCPST");

                    b.Property<double>("pICMSST");

                    b.Property<double>("pMVAST");

                    b.Property<double>("pRedBCST");

                    b.Property<double>("vBCFCPST");

                    b.Property<double>("vBCST");

                    b.Property<double>("vFCPST");

                    b.Property<double>("vICMSST");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMSSN202");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN500", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CSOSN")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("orig");

                    b.Property<double>("pFCPSTRet");

                    b.Property<double>("pICMSEfet");

                    b.Property<double>("pRedBCEfet");

                    b.Property<double>("pST");

                    b.Property<double>("vBCEfet");

                    b.Property<double>("vBCSFCPSTRet");

                    b.Property<double>("vBCSTRet");

                    b.Property<double>("vFCPSTRet");

                    b.Property<double>("vICMSEfet");

                    b.Property<double>("vICMSSTRet");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMSSN500");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN900", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CSOSN")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("modBC");

                    b.Property<byte>("modBCST");

                    b.Property<byte>("orig");

                    b.Property<double>("pCredSN");

                    b.Property<double>("pFCPST");

                    b.Property<double>("pICMS");

                    b.Property<double>("pICMSST");

                    b.Property<double>("pMVAST");

                    b.Property<double>("pRedBC");

                    b.Property<double>("pRedBCST");

                    b.Property<double>("vBC");

                    b.Property<double>("vBCFCPST");

                    b.Property<double>("vBCST");

                    b.Property<double>("vCredICMSSN");

                    b.Property<double>("vFCPST");

                    b.Property<double>("vICMS");

                    b.Property<double>("vICMSST");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMSSN900");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSST", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("ICMSId");

                    b.Property<byte>("orig");

                    b.Property<double>("vBCSTDest");

                    b.Property<double>("vBCSTRet");

                    b.Property<double>("vICMSSTDest");

                    b.Property<double>("vICMSSTRet");

                    b.HasKey("Id");

                    b.HasIndex("ICMSId")
                        .IsUnique();

                    b.ToTable("ICMSST");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icmsufdest.ICMSUFDest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("impostoId");

                    b.Property<double>("pFCPUFdest");

                    b.Property<double>("pICMSInter");

                    b.Property<double>("pICMSInterPart");

                    b.Property<double>("pICMSUFDest");

                    b.Property<double>("vBCFCPUFdest");

                    b.Property<double>("vBCUFDest");

                    b.Property<double>("vFCUFdest");

                    b.Property<double>("vICMSUFDest");

                    b.Property<double>("vICMSUFRemet");

                    b.HasKey("Id");

                    b.HasIndex("impostoId")
                        .IsUnique();

                    b.ToTable("ICMSUFDest");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.ii.II", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("impostoId");

                    b.Property<double>("vBC");

                    b.Property<double>("vDespAdu");

                    b.Property<double>("vII");

                    b.Property<double>("vIOF");

                    b.HasKey("Id");

                    b.HasIndex("impostoId")
                        .IsUnique();

                    b.ToTable("II");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.imposto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("detId");

                    b.Property<double>("vTotTrib");

                    b.HasKey("Id");

                    b.HasIndex("detId")
                        .IsUnique();

                    b.ToTable("imposto");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.ipi.IPI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJProd")
                        .HasMaxLength(14);

                    b.Property<string>("cEnq")
                        .HasMaxLength(3);

                    b.Property<string>("cIEnq");

                    b.Property<string>("cSelo")
                        .HasMaxLength(60);

                    b.Property<int>("impostoId");

                    b.Property<int>("qSelo")
                        .HasMaxLength(12);

                    b.HasKey("Id");

                    b.HasIndex("impostoId")
                        .IsUnique();

                    b.ToTable("IPI");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.ipi.IPINT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("IPIId");

                    b.HasKey("Id");

                    b.HasIndex("IPIId")
                        .IsUnique();

                    b.ToTable("IPINT");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.ipi.IPITrib", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("IPIId");

                    b.Property<double>("pIPI");

                    b.Property<double>("qUnid");

                    b.Property<double>("vBC");

                    b.Property<double>("vIPI");

                    b.Property<double>("vUnid");

                    b.HasKey("Id");

                    b.HasIndex("IPIId")
                        .IsUnique();

                    b.ToTable("IPITrib");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.issqn.ISSQN", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cListServ")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("cMun");

                    b.Property<int>("cMunFG");

                    b.Property<int>("cPais");

                    b.Property<string>("cServico")
                        .HasMaxLength(20);

                    b.Property<int>("impostoId");

                    b.Property<byte>("indISS");

                    b.Property<byte>("indIncentivo");

                    b.Property<string>("nProcesso")
                        .HasMaxLength(30);

                    b.Property<double>("vAliq");

                    b.Property<double>("vBC");

                    b.Property<double>("vDeducao");

                    b.Property<double>("vDescCond");

                    b.Property<double>("vDescIncond");

                    b.Property<double>("vISSQN");

                    b.Property<double>("vISSRet");

                    b.Property<double>("vOutro");

                    b.HasKey("Id");

                    b.HasIndex("impostoId")
                        .IsUnique();

                    b.ToTable("ISSQN");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PIS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("impostoId");

                    b.HasKey("Id");

                    b.HasIndex("impostoId")
                        .IsUnique();

                    b.ToTable("PIS");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PISAliq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("PISId");

                    b.Property<double>("pPIS");

                    b.Property<double>("vBC");

                    b.Property<double>("vPIS");

                    b.HasKey("Id");

                    b.HasIndex("PISId")
                        .IsUnique();

                    b.ToTable("PISAliq");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PISNT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("PISId");

                    b.Property<double>("pPIS");

                    b.Property<double>("qBCProd");

                    b.Property<double>("vAliqProd");

                    b.Property<double>("vBC");

                    b.Property<double>("vPIS");

                    b.HasKey("Id");

                    b.HasIndex("PISId")
                        .IsUnique();

                    b.ToTable("PISNT");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PISOutr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("PISId");

                    b.Property<double>("pPIS");

                    b.Property<double>("qBCProd");

                    b.Property<double>("vAliqProd");

                    b.Property<double>("vBC");

                    b.Property<double>("vPIS");

                    b.HasKey("Id");

                    b.HasIndex("PISId")
                        .IsUnique();

                    b.ToTable("PISOutr");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PISQtde", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CST")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("PISId");

                    b.Property<double>("qBCProd");

                    b.Property<double>("vAliqProd");

                    b.Property<double>("vPIS");

                    b.HasKey("Id");

                    b.HasIndex("PISId")
                        .IsUnique();

                    b.ToTable("PISQtde");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.pisst.PISST", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("impostoId");

                    b.Property<double>("pPIS");

                    b.Property<double>("qBCProd");

                    b.Property<double>("vAliqProd");

                    b.Property<double>("vBC");

                    b.Property<double>("vPIS");

                    b.HasKey("Id");

                    b.HasIndex("impostoId")
                        .IsUnique();

                    b.ToTable("PISST");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.ImpostoDevol.IPI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("impostoDevolId");

                    b.Property<double>("vIPIDevol");

                    b.HasKey("Id");

                    b.HasIndex("impostoDevolId")
                        .IsUnique();

                    b.ToTable("IPIDevol");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.ImpostoDevol.impostoDevol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("detId");

                    b.Property<double>("pDevol");

                    b.HasKey("Id");

                    b.HasIndex("detId")
                        .IsUnique();

                    b.ToTable("impostoDevol");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.CIDE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("compId");

                    b.Property<double>("qBCProd");

                    b.Property<double>("vAliqProd");

                    b.Property<double>("vCIDE");

                    b.HasKey("Id");

                    b.HasIndex("compId")
                        .IsUnique();

                    b.ToTable("CIDE");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.DI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14);

                    b.Property<int>("UFDesemb");

                    b.Property<string>("UFTerceiro");

                    b.Property<string>("cExportador")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<DateTime>("dDI");

                    b.Property<DateTime>("dDesemb");

                    b.Property<string>("nDI")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<int>("prodId");

                    b.Property<byte>("tpIntermedio");

                    b.Property<int>("tpViaTransp");

                    b.Property<double>("vAFRMM");

                    b.Property<string>("xLocDesemb")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("prodId");

                    b.ToTable("DI");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.adi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DIid");

                    b.Property<string>("cFabricante")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int>("nAdicao");

                    b.Property<string>("nDraw")
                        .HasMaxLength(11);

                    b.Property<int>("nSeqAdic");

                    b.Property<double>("vDescDI");

                    b.HasKey("Id");

                    b.HasIndex("DIid");

                    b.ToTable("adi");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.arma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descr")
                        .IsRequired();

                    b.Property<string>("nCano")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("nSerie")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<int>("prodId");

                    b.Property<byte>("tpArma")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("prodId");

                    b.ToTable("arma");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.comb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODIF")
                        .HasMaxLength(21);

                    b.Property<string>("UFCons")
                        .IsRequired();

                    b.Property<string>("cProdANP")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<string>("descANP");

                    b.Property<double>("pGLP");

                    b.Property<double>("pGNi");

                    b.Property<double>("pGNn");

                    b.Property<int>("prodId");

                    b.Property<double>("qTemp");

                    b.Property<double>("vPart");

                    b.HasKey("Id");

                    b.HasIndex("prodId")
                        .IsUnique();

                    b.ToTable("comb");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.detExport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nDraw")
                        .HasMaxLength(11);

                    b.Property<int>("prodId");

                    b.HasKey("Id");

                    b.HasIndex("prodId");

                    b.ToTable("detExport");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.encerrante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("compId");

                    b.Property<string>("nBico")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("nBomba")
                        .HasMaxLength(3);

                    b.Property<string>("nTanque")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<double>("vEncFin");

                    b.Property<double>("vEncIni");

                    b.HasKey("Id");

                    b.HasIndex("compId")
                        .IsUnique();

                    b.ToTable("encerrante");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.exportInd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("chNFe")
                        .IsRequired()
                        .HasMaxLength(44);

                    b.Property<int>("detExportId");

                    b.Property<string>("nRE")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<double>("qExport");

                    b.HasKey("Id");

                    b.HasIndex("detExportId");

                    b.ToTable("exportInd");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.med", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cProdANVISA")
                        .HasMaxLength(13);

                    b.Property<DateTime>("dFab");

                    b.Property<DateTime>("dVal");

                    b.Property<string>("nLote")
                        .HasMaxLength(20);

                    b.Property<int>("prodId");

                    b.Property<double>("qLote");

                    b.Property<double>("vPMC");

                    b.HasKey("Id");

                    b.HasIndex("prodId")
                        .IsUnique();

                    b.ToTable("med");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.prod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CEST")
                        .HasMaxLength(7);

                    b.Property<string>("CFOP")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("CNPJFab")
                        .HasMaxLength(14);

                    b.Property<string>("EXTIPI")
                        .HasMaxLength(3);

                    b.Property<string>("NCM")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("NVE")
                        .HasMaxLength(6);

                    b.Property<int>("TProdutoId");

                    b.Property<string>("cBenef")
                        .HasMaxLength(10);

                    b.Property<string>("cEAN")
                        .HasMaxLength(14);

                    b.Property<string>("cEANTrib");

                    b.Property<string>("cProd")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int>("detId");

                    b.Property<string>("genero");

                    b.Property<int>("indEscala");

                    b.Property<int>("indTot");

                    b.Property<string>("nFCI")
                        .HasMaxLength(36);

                    b.Property<int>("nItemPed")
                        .HasMaxLength(6);

                    b.Property<string>("nRECOPI")
                        .HasMaxLength(20);

                    b.Property<double>("qCom");

                    b.Property<double>("qTrib");

                    b.Property<string>("uCom")
                        .IsRequired();

                    b.Property<string>("uTrib")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<double>("vDesc");

                    b.Property<double>("vFrete");

                    b.Property<double>("vOutro");

                    b.Property<double>("vProd");

                    b.Property<double>("vSeg");

                    b.Property<double>("vUnCom");

                    b.Property<double>("vUnTrib");

                    b.Property<string>("xPed")
                        .HasMaxLength(15);

                    b.Property<string>("xProd");

                    b.HasKey("Id");

                    b.HasIndex("CEST");

                    b.HasIndex("NCM");

                    b.HasIndex("cProd");

                    b.HasIndex("detId")
                        .IsUnique();

                    b.HasIndex("xProd");

                    b.ToTable("prod");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.rastro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cAgreg")
                        .HasMaxLength(20);

                    b.Property<DateTime>("dFab");

                    b.Property<DateTime>("dVal");

                    b.Property<int>("nLote")
                        .HasMaxLength(20);

                    b.Property<int>("prodId");

                    b.Property<double>("qLote");

                    b.HasKey("Id");

                    b.HasIndex("prodId");

                    b.ToTable("rastro");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.veicProd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CMT")
                        .HasMaxLength(9);

                    b.Property<byte>("VIN")
                        .HasMaxLength(1);

                    b.Property<int>("anoFab")
                        .HasMaxLength(4);

                    b.Property<int>("anoMod")
                        .HasMaxLength(4);

                    b.Property<string>("cCor")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("cCorDENATRAN")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("cMod")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("chassi")
                        .IsRequired()
                        .HasMaxLength(17);

                    b.Property<string>("cilin")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<byte>("condVeic")
                        .HasMaxLength(1);

                    b.Property<string>("dist")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<byte>("espVeic")
                        .HasMaxLength(1);

                    b.Property<int>("lota")
                        .HasMaxLength(3);

                    b.Property<string>("nMotor")
                        .IsRequired()
                        .HasMaxLength(21);

                    b.Property<string>("nSerie")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<double>("pesoB")
                        .HasMaxLength(9);

                    b.Property<double>("pesoL")
                        .HasMaxLength(9);

                    b.Property<string>("pot")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<int>("prodId");

                    b.Property<string>("tpComb")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("tpOp");

                    b.Property<byte>("tpPint")
                        .HasMaxLength(1);

                    b.Property<byte>("tpRest")
                        .HasMaxLength(1);

                    b.Property<string>("tpVeic")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("xCor")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.HasIndex("prodId")
                        .IsUnique();

                    b.ToTable("veicProd");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.det", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("infAdProd")
                        .HasMaxLength(500);

                    b.Property<string>("infNFeId");

                    b.Property<int>("nItem")
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.HasIndex("infNFeId");

                    b.ToTable("det");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Emit.emit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNAE")
                        .HasMaxLength(7);

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14);

                    b.Property<string>("CPF")
                        .HasMaxLength(11);

                    b.Property<int>("CRT");

                    b.Property<string>("IE")
                        .IsRequired()
                        .HasMaxLength(14);

                    b.Property<string>("IEST")
                        .HasMaxLength(14);

                    b.Property<string>("IM")
                        .HasMaxLength(15);

                    b.Property<string>("infNFeId");

                    b.Property<string>("xFant")
                        .HasMaxLength(60);

                    b.Property<string>("xNome")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("CNPJ");

                    b.HasIndex("CPF");

                    b.HasIndex("infNFeId")
                        .IsUnique()
                        .HasFilter("[infNFeId] IS NOT NULL");

                    b.HasIndex("xFant");

                    b.HasIndex("xNome");

                    b.ToTable("emit");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Emit.enderEmit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CEP")
                        .HasMaxLength(60);

                    b.Property<int>("UF");

                    b.Property<int>("cMun")
                        .HasMaxLength(7);

                    b.Property<int>("cPais")
                        .HasMaxLength(60);

                    b.Property<int>("destId");

                    b.Property<int>("emitId");

                    b.Property<string>("fone")
                        .HasMaxLength(60);

                    b.Property<string>("nro")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("xBairro")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("xCpl")
                        .HasMaxLength(60);

                    b.Property<string>("xLgr")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("xMun")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("xPais")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("UF");

                    b.HasIndex("cMun");

                    b.HasIndex("emitId")
                        .IsUnique();

                    b.HasIndex("nro");

                    b.HasIndex("xBairro");

                    b.HasIndex("xLgr");

                    b.HasIndex("xMun");

                    b.ToTable("enderEmit");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Entrega.entrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UF");

                    b.Property<int>("cMun")
                        .HasMaxLength(7);

                    b.Property<string>("infNFeId");

                    b.Property<string>("nro")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("xBairro")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("xCpl")
                        .HasMaxLength(60);

                    b.Property<string>("xLgr")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("xMun")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("UF");

                    b.HasIndex("cMun");

                    b.HasIndex("infNFeId")
                        .IsUnique()
                        .HasFilter("[infNFeId] IS NOT NULL");

                    b.HasIndex("xBairro");

                    b.HasIndex("xLgr");

                    b.HasIndex("xMun");

                    b.ToTable("entrega");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Exporta.exporta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UFSaidaPais");

                    b.Property<string>("infNFeId");

                    b.Property<string>("xLocDespacho")
                        .HasMaxLength(60);

                    b.Property<string>("xLocExporta")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("infNFeId")
                        .IsUnique()
                        .HasFilter("[infNFeId] IS NOT NULL");

                    b.ToTable("exporta");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Ide.NFref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ideId");

                    b.Property<string>("refCTe")
                        .HasMaxLength(44);

                    b.Property<string>("refNFe")
                        .HasMaxLength(44);

                    b.HasKey("Id");

                    b.HasIndex("ideId");

                    b.ToTable("NFref");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Ide.ide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cDV")
                        .HasMaxLength(1);

                    b.Property<int>("cMunFG")
                        .HasMaxLength(7);

                    b.Property<int>("cNF");

                    b.Property<int>("cUF");

                    b.Property<DateTime>("dSaiEnt");

                    b.Property<DateTime>("dhCont");

                    b.Property<DateTime>("dhEmi");

                    b.Property<DateTime>("dhSaiEnt");

                    b.Property<int>("finNFe");

                    b.Property<TimeSpan>("hSaiEnt");

                    b.Property<int>("idDest");

                    b.Property<int>("indFinal");

                    b.Property<int>("indPag");

                    b.Property<int>("indPres");

                    b.Property<string>("infNFeId");

                    b.Property<int>("mod");

                    b.Property<int>("nNF")
                        .HasMaxLength(9);

                    b.Property<string>("natOp")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int>("procEmi");

                    b.Property<int>("serie");

                    b.Property<int>("tpAmb");

                    b.Property<int>("tpEmis");

                    b.Property<int>("tpImp");

                    b.Property<int>("tpNF");

                    b.Property<string>("verProc")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("xJust")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("cMunFG");

                    b.HasIndex("cUF");

                    b.HasIndex("finNFe");

                    b.HasIndex("idDest");

                    b.HasIndex("indFinal");

                    b.HasIndex("infNFeId")
                        .IsUnique()
                        .HasFilter("[infNFeId] IS NOT NULL");

                    b.HasIndex("nNF");

                    b.ToTable("ide");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Ide.refECF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NFrefId");

                    b.Property<string>("mod")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int>("nCOO");

                    b.Property<int>("nECF");

                    b.HasKey("Id");

                    b.HasIndex("NFrefId")
                        .IsUnique();

                    b.ToTable("refECF");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Ide.refNF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AAMM")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14);

                    b.Property<int>("NFrefId");

                    b.Property<int>("cUF")
                        .HasMaxLength(7);

                    b.Property<string>("mod")
                        .IsRequired();

                    b.Property<int>("nNF")
                        .HasMaxLength(9);

                    b.Property<string>("serie")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.HasIndex("NFrefId")
                        .IsUnique();

                    b.ToTable("refNF");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Ide.refNFP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AAMM")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14);

                    b.Property<string>("CPF")
                        .HasMaxLength(11);

                    b.Property<string>("IE");

                    b.Property<int>("NFrefId");

                    b.Property<int>("cUF")
                        .HasMaxLength(7);

                    b.Property<string>("mod")
                        .IsRequired();

                    b.Property<int>("nNF")
                        .HasMaxLength(9);

                    b.Property<string>("serie")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.HasIndex("NFrefId")
                        .IsUnique();

                    b.ToTable("refNFP");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.InfAdic.infAdic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("infAdFisco")
                        .HasMaxLength(2000);

                    b.Property<string>("infCpl")
                        .HasMaxLength(5000);

                    b.Property<string>("infNFeId");

                    b.HasKey("Id");

                    b.HasIndex("infNFeId")
                        .IsUnique()
                        .HasFilter("[infNFeId] IS NOT NULL");

                    b.ToTable("infAdic");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.InfAdic.obsCont", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("infAdicId");

                    b.Property<string>("xCampo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("xTexto")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("infAdicId");

                    b.ToTable("obsCont");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.InfAdic.obsFisco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("infAdicId");

                    b.Property<string>("xCampo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("xTexto")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("infAdicId");

                    b.ToTable("obsFisco");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.InfAdic.procRef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("indProc");

                    b.Property<int>("infAdicId");

                    b.Property<string>("nProc")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("infAdicId");

                    b.ToTable("procRef");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Pag.card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14);

                    b.Property<int>("cAut")
                        .HasMaxLength(20);

                    b.Property<int>("detPagId");

                    b.Property<string>("tBand")
                        .HasMaxLength(2);

                    b.Property<int>("tpIntegra")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("detPagId")
                        .IsUnique();

                    b.ToTable("card");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Pag.detPag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("indPag");

                    b.Property<int>("pagId");

                    b.Property<string>("tPag")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<double>("vPag");

                    b.HasKey("Id");

                    b.HasIndex("pagId");

                    b.ToTable("detPag");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Pag.pag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("infNFeId");

                    b.Property<double>("vTroco");

                    b.HasKey("Id");

                    b.HasIndex("infNFeId")
                        .IsUnique()
                        .HasFilter("[infNFeId] IS NOT NULL");

                    b.ToTable("pag");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Retirada.retirada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UF");

                    b.Property<int>("cMun")
                        .HasMaxLength(7);

                    b.Property<string>("infNFeId");

                    b.Property<string>("nro")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("xBairro")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("xCpl")
                        .HasMaxLength(60);

                    b.Property<string>("xLgr")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("xMun")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("UF");

                    b.HasIndex("cMun");

                    b.HasIndex("infNFeId")
                        .IsUnique()
                        .HasFilter("[infNFeId] IS NOT NULL");

                    b.HasIndex("xBairro");

                    b.HasIndex("xLgr");

                    b.HasIndex("xMun");

                    b.ToTable("retirada");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.TiposBasicos.TProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CEST");

                    b.Property<string>("CNPJFab");

                    b.Property<string>("EXTIPI");

                    b.Property<string>("NCM");

                    b.Property<string>("NVE");

                    b.Property<string>("cBenef");

                    b.Property<string>("cEAN");

                    b.Property<string>("cProd");

                    b.Property<string>("genero");

                    b.Property<int>("indEscala");

                    b.Property<string>("xProd");

                    b.HasKey("Id");

                    b.ToTable("tprodutoBases");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Total.ICMSTot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("totalId");

                    b.Property<double>("vBC");

                    b.Property<double>("vBCST");

                    b.Property<double>("vCOFINS");

                    b.Property<double>("vDesc");

                    b.Property<double>("vFCP");

                    b.Property<double>("vFCPST");

                    b.Property<double>("vFCPSTRet");

                    b.Property<double>("vFCPUFDest");

                    b.Property<double>("vFrete");

                    b.Property<double>("vICMS");

                    b.Property<double>("vICMSDeson");

                    b.Property<double>("vICMSUFDest");

                    b.Property<double>("vICMSUFRemet");

                    b.Property<double>("vII");

                    b.Property<double>("vIPI");

                    b.Property<double>("vIPIDevol");

                    b.Property<double>("vNF");

                    b.Property<double>("vOutro");

                    b.Property<double>("vPIS");

                    b.Property<double>("vProd");

                    b.Property<double>("vST");

                    b.Property<double>("vSeg");

                    b.Property<double>("vTotTrib");

                    b.HasKey("Id");

                    b.HasIndex("totalId")
                        .IsUnique();

                    b.ToTable("ICMSTot");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Total.ISSQNTot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("cRegTrib");

                    b.Property<DateTime>("dCompet");

                    b.Property<int>("totalId");

                    b.Property<double>("vBC");

                    b.Property<double>("vCOFINS");

                    b.Property<double>("vDeducao");

                    b.Property<double>("vDescCond");

                    b.Property<double>("vDescIncond");

                    b.Property<double>("vISS");

                    b.Property<double>("vISSRet");

                    b.Property<double>("vOutro");

                    b.Property<double>("vPIS");

                    b.Property<double>("vServ");

                    b.HasKey("Id");

                    b.HasIndex("totalId")
                        .IsUnique();

                    b.ToTable("ISSQNTot");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Total.retTrib", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("totalId");

                    b.Property<double>("vBCIRRF");

                    b.Property<double>("vBCRetPrev");

                    b.Property<double>("vIRRF");

                    b.Property<double>("vRetCOFINS");

                    b.Property<double>("vRetCSLL");

                    b.Property<double>("vRetPIS");

                    b.Property<double>("vRetPrev");

                    b.HasKey("Id");

                    b.HasIndex("totalId")
                        .IsUnique();

                    b.ToTable("retTrib");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Total.total", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("infNFeId");

                    b.HasKey("Id");

                    b.HasIndex("infNFeId")
                        .IsUnique()
                        .HasFilter("[infNFeId] IS NOT NULL");

                    b.ToTable("total");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Transp.lacres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nLacre")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int>("volId");

                    b.HasKey("Id");

                    b.HasIndex("volId");

                    b.ToTable("lacres");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Transp.reboque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RNTC")
                        .HasMaxLength(20);

                    b.Property<int>("UF");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasMaxLength(7);

                    b.Property<int>("transpId");

                    b.HasKey("Id");

                    b.HasIndex("transpId");

                    b.ToTable("reboque");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Transp.retTransp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CFOP")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<int>("cMunFG");

                    b.Property<double>("pICMSRet");

                    b.Property<int>("transpId");

                    b.Property<double>("vBCRet");

                    b.Property<double>("vICMSRet");

                    b.Property<double>("vServ");

                    b.HasKey("Id");

                    b.HasIndex("transpId")
                        .IsUnique();

                    b.ToTable("retTransp");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Transp.transp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("balsa")
                        .HasMaxLength(20);

                    b.Property<string>("infNFeId");

                    b.Property<byte>("modFrete");

                    b.Property<int>("vagao")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("infNFeId")
                        .IsUnique()
                        .HasFilter("[infNFeId] IS NOT NULL");

                    b.ToTable("transp");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Transp.transporta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14);

                    b.Property<string>("CPF")
                        .HasMaxLength(11);

                    b.Property<string>("IE")
                        .HasMaxLength(14);

                    b.Property<string>("UF");

                    b.Property<int>("transpId");

                    b.Property<string>("xEnder")
                        .HasMaxLength(60);

                    b.Property<string>("xMun")
                        .HasMaxLength(60);

                    b.Property<string>("xNome")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("transpId")
                        .IsUnique();

                    b.ToTable("transporta");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Transp.veicTransp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RNTC")
                        .HasMaxLength(20);

                    b.Property<int>("UF");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasMaxLength(7);

                    b.Property<int>("transpId");

                    b.HasKey("Id");

                    b.HasIndex("transpId")
                        .IsUnique();

                    b.ToTable("veicTransp");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Transp.vol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("esp")
                        .HasMaxLength(60);

                    b.Property<string>("marca")
                        .HasMaxLength(60);

                    b.Property<string>("nVol")
                        .HasMaxLength(60);

                    b.Property<double>("pesoB");

                    b.Property<double>("pesoL");

                    b.Property<int>("qVol")
                        .HasMaxLength(15);

                    b.Property<int>("transpId");

                    b.HasKey("Id");

                    b.HasIndex("transpId");

                    b.ToTable("vol");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.infNFe", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(44);

                    b.Property<string>("NFeId");

                    b.Property<string>("versao")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.HasIndex("NFeId")
                        .IsUnique()
                        .HasFilter("[NFeId] IS NOT NULL");

                    b.HasIndex("versao");

                    b.ToTable("infNFe");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.infNFeSupl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NFeId");

                    b.Property<string>("qrCode")
                        .HasMaxLength(600);

                    b.Property<string>("urlChave")
                        .HasMaxLength(85);

                    b.HasKey("Id");

                    b.HasIndex("NFeId")
                        .IsUnique()
                        .HasFilter("[NFeId] IS NOT NULL");

                    b.ToTable("infNFeSupl");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.Prosoft.Empresas", b =>
                {
                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CNPJ");

                    b.Property<string>("IE");

                    b.Property<string>("Razao");

                    b.HasKey("Codigo");

                    b.HasIndex("CNPJ");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.NFe", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(44);

                    b.Property<byte[]>("Hash")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.ToTable("NFe");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.TEvento.evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("procEventoNFeId");

                    b.Property<string>("versao")
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.HasIndex("procEventoNFeId")
                        .IsUnique();

                    b.ToTable("evento");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.TEvento.infEvento", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14);

                    b.Property<string>("CPF")
                        .HasMaxLength(11);

                    b.Property<string>("cOrgao")
                        .HasMaxLength(2);

                    b.Property<string>("chNFe")
                        .HasMaxLength(44);

                    b.Property<string>("detEvento")
                        .HasColumnType("xml");

                    b.Property<DateTime>("dhEvento");

                    b.Property<int>("eventoId");

                    b.Property<string>("nSeqEvento")
                        .HasMaxLength(2);

                    b.Property<int>("tpAmb");

                    b.Property<string>("tpEvento")
                        .HasMaxLength(6);

                    b.Property<string>("verEvento");

                    b.HasKey("Id");

                    b.HasIndex("eventoId")
                        .IsUnique();

                    b.ToTable("infEvento");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.TRetEvento.infEvento", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CNPJDest")
                        .HasMaxLength(14);

                    b.Property<string>("CPFDest")
                        .HasMaxLength(11);

                    b.Property<string>("cOrgao")
                        .HasMaxLength(2);

                    b.Property<string>("cStat")
                        .HasMaxLength(3);

                    b.Property<string>("chNFe")
                        .HasMaxLength(44);

                    b.Property<DateTime>("dhRegEvento");

                    b.Property<string>("emailDest")
                        .HasMaxLength(60);

                    b.Property<string>("nProt")
                        .HasMaxLength(15);

                    b.Property<string>("nSeqEvento")
                        .HasMaxLength(2);

                    b.Property<int>("retEventoId");

                    b.Property<int>("tpAmb");

                    b.Property<string>("tpEvento")
                        .HasMaxLength(6);

                    b.Property<string>("verAplic")
                        .HasMaxLength(20);

                    b.Property<string>("xEvento")
                        .HasMaxLength(60);

                    b.Property<string>("xMotivo")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("retEventoId")
                        .IsUnique();

                    b.ToTable("retinfEvento");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.TRetEvento.retEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("procEventoNFeId");

                    b.Property<string>("versao")
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.HasIndex("procEventoNFeId")
                        .IsUnique();

                    b.ToTable("retEvento");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.procEventoNFe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("retConsSitNFeId");

                    b.Property<string>("versao")
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.HasIndex("retConsSitNFeId");

                    b.ToTable("procEventoNFe");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProtNFe.infProt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cStat")
                        .HasMaxLength(3);

                    b.Property<string>("chNFe")
                        .HasMaxLength(44);

                    b.Property<DateTime>("dhRecibo");

                    b.Property<string>("digVal");

                    b.Property<string>("nProt")
                        .HasMaxLength(15);

                    b.Property<int>("protNFeId");

                    b.Property<int>("tpAmb");

                    b.Property<string>("verAplic")
                        .HasMaxLength(20);

                    b.Property<string>("versao");

                    b.Property<string>("xMotivo")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("protNFeId")
                        .IsUnique();

                    b.ToTable("infProt");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProtNFe.protNFe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("retConsSitNFeId");

                    b.Property<string>("versao")
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.HasIndex("retConsSitNFeId")
                        .IsUnique();

                    b.ToTable("protNFe");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TRetCancNFe.infCanc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cStat")
                        .HasMaxLength(3);

                    b.Property<int>("cUF");

                    b.Property<string>("chNFe")
                        .HasMaxLength(44);

                    b.Property<DateTime>("dhRecibo");

                    b.Property<string>("nProt")
                        .HasMaxLength(15);

                    b.Property<int>("retCancNFeId");

                    b.Property<int>("tpAmb");

                    b.Property<string>("verAplic")
                        .HasMaxLength(4);

                    b.Property<string>("xMotivo")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("retCancNFeId")
                        .IsUnique();

                    b.ToTable("infCanc");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TRetCancNFe.retCancNFe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("retConsSitNFeId");

                    b.Property<string>("versao")
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.HasIndex("retConsSitNFeId")
                        .IsUnique();

                    b.ToTable("retCancNFe");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.retConsSitNFe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("XmlNFeId");

                    b.Property<string>("cStat")
                        .HasMaxLength(3);

                    b.Property<int>("cUF");

                    b.Property<string>("chNFe")
                        .HasMaxLength(44);

                    b.Property<DateTime>("dhRecibo");

                    b.Property<int>("tpAmb");

                    b.Property<string>("verAplic")
                        .HasMaxLength(20);

                    b.Property<string>("versao")
                        .HasMaxLength(4);

                    b.Property<string>("xMotivo")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("XmlNFeId")
                        .IsUnique();

                    b.ToTable("retConsSitNFe");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.XmlNFe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DhChange");

                    b.Property<string>("FileNFe")
                        .IsRequired()
                        .HasColumnType("xml");

                    b.Property<string>("NFeId")
                        .IsRequired()
                        .HasMaxLength(44);

                    b.HasKey("Id");

                    b.HasIndex("DhChange");

                    b.HasIndex("NFeId")
                        .IsUnique();

                    b.ToTable("xmlNFe");
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.AutXML.autXML", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithMany("autXML")
                        .HasForeignKey("infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Avulsa.avulsa", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithOne("avulsa")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Avulsa.avulsa", "infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Cana.cana", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithOne("cana")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Cana.cana", "infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Cana.deduc", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Cana.cana")
                        .WithMany("deduc")
                        .HasForeignKey("canaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Cana.forDia", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Cana.cana")
                        .WithMany("forDia")
                        .HasForeignKey("canaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Cobr.cobr", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithOne("cobr")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Cobr.cobr", "infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Cobr.dup", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Cobr.cobr")
                        .WithMany("dup")
                        .HasForeignKey("cobrId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Cobr.fat", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Cobr.cobr")
                        .WithOne("fat")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Cobr.fat", "cobrId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Compra.compra", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithOne("compra")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Compra.compra", "infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Dest.dest", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithOne("dest")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Dest.dest", "infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Dest.enderDest", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Dest.dest")
                        .WithOne("enderDest")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Dest.enderDest", "destId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINS", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.imposto")
                        .WithOne("COFINS")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINS", "impostoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINSAliq", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINS")
                        .WithOne("COFINSAliq")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINSAliq", "COFINSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINSNT", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINS")
                        .WithOne("COFINSNT")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINSNT", "COFINSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINSOutr", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINS")
                        .WithOne("COFINSOutr")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINSOutr", "COFINSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINSQtde", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINS")
                        .WithOne("COFINSQtde")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofins.COFINSQtde", "COFINSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofinsst.COFINSST", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.imposto")
                        .WithOne("COFINSST")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.cofinsst.COFINSST", "impostoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.imposto")
                        .WithOne("ICMS")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS", "impostoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS00", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMS00")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS00", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS10", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMS10")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS10", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS20", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMS20")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS20", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS30", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMS30")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS30", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS40", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMS40")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS40", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS51", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMS51")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS51", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS60", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMS60")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS60", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS70", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMS70")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS70", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS90", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMS90")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS90", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSPart", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMSPart")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSPart", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN101", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMSSN101")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN101", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN102", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMSSN102")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN102", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN201", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMSSN201")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN201", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN202", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMSSN202")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN202", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN500", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMSSN500")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN500", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN900", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMSSN900")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSSN900", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSST", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMS")
                        .WithOne("ICMSST")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icms.ICMSST", "ICMSId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.icmsufdest.ICMSUFDest", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.imposto")
                        .WithOne("ICMSUFDest")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.icmsufdest.ICMSUFDest", "impostoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.ii.II", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.imposto")
                        .WithOne("II")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.ii.II", "impostoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.imposto", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.det")
                        .WithOne("imposto")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.imposto", "detId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.ipi.IPI", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.imposto")
                        .WithOne("IPI")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.ipi.IPI", "impostoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.ipi.IPINT", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.ipi.IPI")
                        .WithOne("IPINT")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.ipi.IPINT", "IPIId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.ipi.IPITrib", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.ipi.IPI")
                        .WithOne("IPITrib")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.ipi.IPITrib", "IPIId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.issqn.ISSQN", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.imposto")
                        .WithOne("ISSQN")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.issqn.ISSQN", "impostoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PIS", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.imposto")
                        .WithOne("PIS")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PIS", "impostoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PISAliq", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PIS")
                        .WithOne("PISAliq")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PISAliq", "PISId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PISNT", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PIS")
                        .WithOne("PISNT")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PISNT", "PISId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PISOutr", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PIS")
                        .WithOne("PISOutr")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PISOutr", "PISId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PISQtde", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PIS")
                        .WithOne("PISQtde")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.pis.PISQtde", "PISId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Imposto.pisst.PISST", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Imposto.imposto")
                        .WithOne("PISST")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Imposto.pisst.PISST", "impostoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.ImpostoDevol.IPI", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.ImpostoDevol.impostoDevol")
                        .WithOne("IPI")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.ImpostoDevol.IPI", "impostoDevolId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.ImpostoDevol.impostoDevol", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.det")
                        .WithOne("impostoDevol")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.ImpostoDevol.impostoDevol", "detId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.CIDE", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Prod.comb")
                        .WithOne("CIDE")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Prod.CIDE", "compId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.DI", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Prod.prod")
                        .WithMany("DI")
                        .HasForeignKey("prodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.adi", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Prod.DI")
                        .WithMany("adi")
                        .HasForeignKey("DIid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.arma", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Prod.prod")
                        .WithMany("arma")
                        .HasForeignKey("prodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.comb", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Prod.prod")
                        .WithOne("comb")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Prod.comb", "prodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.detExport", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Prod.prod")
                        .WithMany("detExport")
                        .HasForeignKey("prodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.encerrante", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Prod.comb")
                        .WithOne("encerrante")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Prod.encerrante", "compId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.exportInd", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Prod.detExport")
                        .WithMany("exportInd")
                        .HasForeignKey("detExportId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.med", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Prod.prod")
                        .WithOne("med")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Prod.med", "prodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.prod", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.det")
                        .WithOne("prod")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Prod.prod", "detId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.rastro", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Prod.prod")
                        .WithMany("rastro")
                        .HasForeignKey("prodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.Prod.veicProd", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Det.Prod.prod")
                        .WithOne("veicProd")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Det.Prod.veicProd", "prodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Det.det", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithMany("det")
                        .HasForeignKey("infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Emit.emit", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithOne("emit")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Emit.emit", "infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Emit.enderEmit", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Emit.emit")
                        .WithOne("enderEmit")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Emit.enderEmit", "emitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Entrega.entrega", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithOne("entrega")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Entrega.entrega", "infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Exporta.exporta", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithOne("exporta")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Exporta.exporta", "infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Ide.NFref", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Ide.ide")
                        .WithMany("NFref")
                        .HasForeignKey("ideId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Ide.ide", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithOne("ide")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Ide.ide", "infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Ide.refECF", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Ide.NFref")
                        .WithOne("refECF")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Ide.refECF", "NFrefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Ide.refNF", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Ide.NFref")
                        .WithOne("refNF")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Ide.refNF", "NFrefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Ide.refNFP", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Ide.NFref")
                        .WithOne("refNFP")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Ide.refNFP", "NFrefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.InfAdic.infAdic", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithOne("infAdic")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.InfAdic.infAdic", "infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.InfAdic.obsCont", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.InfAdic.infAdic")
                        .WithMany("obsCont")
                        .HasForeignKey("infAdicId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.InfAdic.obsFisco", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.InfAdic.infAdic")
                        .WithMany("obsFisco")
                        .HasForeignKey("infAdicId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.InfAdic.procRef", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.InfAdic.infAdic")
                        .WithMany("procRef")
                        .HasForeignKey("infAdicId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Pag.card", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Pag.detPag")
                        .WithOne("card")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Pag.card", "detPagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Pag.detPag", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Pag.pag")
                        .WithMany("detPag")
                        .HasForeignKey("pagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Pag.pag", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithOne("pag")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Pag.pag", "infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Retirada.retirada", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithOne("retirada")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Retirada.retirada", "infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Total.ICMSTot", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Total.total")
                        .WithOne("ICMSTot")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Total.ICMSTot", "totalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Total.ISSQNTot", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Total.total")
                        .WithOne("ISSQNTot")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Total.ISSQNTot", "totalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Total.retTrib", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Total.total")
                        .WithOne("retTrib")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Total.retTrib", "totalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Total.total", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithOne("total")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Total.total", "infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Transp.lacres", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Transp.vol")
                        .WithMany("lacres")
                        .HasForeignKey("volId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Transp.reboque", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Transp.transp")
                        .WithMany("reboque")
                        .HasForeignKey("transpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Transp.retTransp", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Transp.transp")
                        .WithOne("retTransp")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Transp.retTransp", "transpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Transp.transp", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.infNFe")
                        .WithOne("transp")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Transp.transp", "infNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Transp.transporta", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Transp.transp")
                        .WithOne("transporta")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Transp.transporta", "transpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Transp.veicTransp", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Transp.transp")
                        .WithOne("veicTransp")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.Transp.veicTransp", "transpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.Transp.vol", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.NFe.Transp.transp")
                        .WithMany("vol")
                        .HasForeignKey("transpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.infNFe", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.procNFe.NFe")
                        .WithOne("infNFe")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.infNFe", "NFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.NFe.infNFeSupl", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.procNFe.NFe")
                        .WithOne("infNFeSupl")
                        .HasForeignKey("TaxAuditCommunity.Domain.NFe.infNFeSupl", "NFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.TEvento.evento", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.procEventoNFe")
                        .WithOne("evento")
                        .HasForeignKey("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.TEvento.evento", "procEventoNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.TEvento.infEvento", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.TEvento.evento")
                        .WithOne("infEvento")
                        .HasForeignKey("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.TEvento.infEvento", "eventoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.TRetEvento.infEvento", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.TRetEvento.retEvento")
                        .WithOne("infEvento")
                        .HasForeignKey("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.TRetEvento.infEvento", "retEventoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.TRetEvento.retEvento", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.procEventoNFe")
                        .WithOne("retEvento")
                        .HasForeignKey("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.TRetEvento.retEvento", "procEventoNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProcEventoNFe.procEventoNFe", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.retConsSitNFe")
                        .WithMany("procEventoNFe")
                        .HasForeignKey("retConsSitNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProtNFe.infProt", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProtNFe.protNFe")
                        .WithOne("infProt")
                        .HasForeignKey("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProtNFe.infProt", "protNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProtNFe.protNFe", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.retConsSitNFe")
                        .WithOne("protNFe")
                        .HasForeignKey("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TProtNFe.protNFe", "retConsSitNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TRetCancNFe.infCanc", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TRetCancNFe.retCancNFe")
                        .WithOne("infCanc")
                        .HasForeignKey("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TRetCancNFe.infCanc", "retCancNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TRetCancNFe.retCancNFe", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.retConsSitNFe")
                        .WithOne("retCancNFe")
                        .HasForeignKey("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.TRetCancNFe.retCancNFe", "retConsSitNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.retConsSitNFe", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.procNFe.XmlNFe")
                        .WithOne("retConsSitNFe")
                        .HasForeignKey("TaxAuditCommunity.Domain.procNFe.TRetConsSitNFe.retConsSitNFe", "XmlNFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxAuditCommunity.Domain.procNFe.XmlNFe", b =>
                {
                    b.HasOne("TaxAuditCommunity.Domain.procNFe.NFe")
                        .WithOne("XmlNFe")
                        .HasForeignKey("TaxAuditCommunity.Domain.procNFe.XmlNFe", "NFeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
